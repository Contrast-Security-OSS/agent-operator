# Used to generate the values.schema.json via https://github.com/losisin/helm-values-schema-json with `helm schema` command
# -- Namespace for the agent-operator, will be created if specified. When left blank the Helm namespace will be used and can be changed using `helm -n <namespace>`. Helm's `--create-namespace` option should be used when the Helm namespace does not exist and should be created.
namespace: # @schema type:[string, null]
image:
  # -- agent-operator registry
  registry: # @schema type:[string];default:contrast
  # -- agent-operator repository
  repository: # @schema type:[string];default:agent-operator
  # -- agent-operator tag. Defaults to Chart.AppVersion
  tag: # @schema type:[string, null]

imageCredentials:
  # -- Name of the registry credential secret that should be used to pull agent-operator image.
  pullSecretName: # @schema type:[string, null];default:image-credentials
  # -- If enabled, a registry credential secret will be created.
  enabled: # @schema type:[boolean];default:false
  # -- Image Registry
  registry: # @schema type:[string];default:contrast
  # -- Image Username
  username: # @schema type:[string, null]
  # -- Image Password
  password: # @schema type:[string, null]
  # -- Image Email
  email: # @schema type:[string, null]

operator:
  # -- If enabled, deploy the operator. Disable if you want to deploy only configuration resources (injectors, cluster defaults).
  enabled: # @schema type:[boolean];default:true
  # -- The default registry to use, defaults to docker.io/contrast.
  defaultRegistry: # @schema type:[string];default:contrast
  # -- The settle duration in seconds. The time to wait to sync with the cluster before making changes.
  settleDuration: # @schema type:[integer];default:10
  # -- Max number of events to queue from the K8s event stream.
  eventQueueSize: # @schema type:[integer];default:10000
  # -- The action to perform when the event queue is full, and the operator is unable to process events fast enough.
  # Wait:
  #   Waits for space to be available in order to complete the write operation.
  #   This might be useful for larger clusters, allow the queue to create back pressure on the "get the world" calls during startup.
  # DropOldest:
  #   Removes and ignores the oldest item in the channel in order to make room for the item being written.
  eventQueueFullMode: # @schema type:[string];enum:[Wait, DropOldest];default:DropOldest
  # -- The secret containing the TLS certificates used for the webhook. Used for to cache TLS certificate generation across restarts, and to share the same certificate across operator instances (when running in HA mode).
  webhookSecretName: # @schema type:[string];default:contrast-web-hook-secret
  # -- The name of the webhook to patch after certificate generation occurs.
  webhookConfiguration: # @schema type:[string];default:contrast-web-hook-configuration
  # -- Enable early chaining. Should only be enabled if you are using a dotnet-core AgentInjector and DynaKube is used in classicStack mode.
  enableEarlyChaining: # @schema type:[boolean];default:false
  # Metadata for the operator deployment.
  labels: {}
  annotations: {}
  # Metadata for the operator pod(s).
  podLabels: {}
  podAnnotations: {}
  # -- SecurityContext for operator pod.
  securityContext: {}
  replicas: # @schema type:[integer];default:1
  resources:
    limits:
      cpu: # @schema type:[string, null];default:2000m
      memory: # @schema type:[string, null];default:512Mi
      ephemeralStorage: # @schema type:[string, null]
    requests:
      cpu: # @schema type:[string, null];default:500m
      memory: # @schema type:[string, null];default:256Mi
      ephemeralStorage: # @schema type:[string, null]
  # -- Resource management for the agent initContainers
  initContainer:
    resources:
      limits:
        cpu: # @schema type:[string, null];default:100m
        memory: # @schema type:[string, null];default:256Mi
        # -- Needs to be greater than the size of the largest agent
        ephemeralStorage: # @schema type:[string, null];default:1Gi
      requests:
        cpu: # @schema type:[string, null];default:100m
        memory: # @schema type:[string, null];default:64Mi
        # -- Needs to be greater than the size of the largest agent
        ephemeralStorage: # @schema type:[string, null];default:1Gi

clusterDefaults:
  # -- If enabled, configure cluster-wide defaults.
  enabled: # @schema type:[boolean];default:false
  # -- If true, parse and replace %variables% in the yaml.
  enableYamlVariableReplacement: # @schema type:[boolean];default:false
  # -- If false, automatically set the Contrast application name on injected workloads (the workload name), rather than use the default (generated by the agent).
  suppressDefaultApplicationName: # @schema type:[boolean];default:false
  # -- If false, automatically set the Contrast server name on injected workloads ('kubernetes-{namespace}'), rather than use the default (normally the pod name).
  suppressDefaultServerName: # @schema type:[boolean];default:false
  # -- Optional. Any custom configuration to use. Must be in the format of the standard YAML file.
  yaml: # @schema type:[string, null]
  # -- If true, mount the connection secret as a volume. This will override CONTRAST_CONFIG_PATH on the pod.
  mountConnectionAsVolume: # @schema type:[boolean];default:false
  # -- Optional. securityContext for init containers.
  initContainerSecurityContext: {}
  # -- Name of a secret to retrieve the cluster-wide connection token from.
  # The secret should contain a key named 'token' (the agent token from the Contrast UI).
  # Leave blank if you want the chart to create a secret using the subsequent tokenValue.
  existingTokenSecret: # @schema type:[string, null]
  # -- Required if existingTokenSecret is not set. The Agent Token from the Contrast UI.
  tokenValue: # @schema type:[string, null]
  # -- Name of a secret to retrieve the cluster-wide connection details from.
  # The secret should contain keys named 'apiKey', 'serviceKey' and 'userName'.
  # Leave blank if you want the chart to create a secret using the subsequent apiKeyValue, serviceKeyValue and userNameValue values.
  existingSecret: # @schema type:[string, null]
  # -- Required. The Contrast UI instance to use. Defaults at the general SAAS instance.
  url: # @schema type:[string, null];default:https://app-agents.contrastsecurity.com/Contrast
  # -- Required if existingSecret is not set. The API Key from the Contrast UI.
  apiKeyValue: # @schema type:[string, null]
  # -- Required if existingSecret is not set. The Service Key from the Contrast UI.
  serviceKeyValue: # @schema type:[string, null]
  # -- Required if existingSecret  is not set. The User Name from the Contrast UI.
  userNameValue: # @schema type:[string, null]

agentInjectors:
  # -- If enabled, configure AgentInjectors.
  enabled: # @schema type:[boolean];default:true
  # -- Create ClusterAgentInjector resources instead of AgentInjectors
  useClusterAgentInjectors: # @schema type:[boolean];default:true
  # -- Optional, target namespaces for AgentInjectors. Glob syntax is supported if useClusterAgentInjectors is true.
  namespaces: [] # @schema item:string;default:[default]
  # -- Optional, label selector to select namespaces to create AgentInjectors in. Only supported if useClusterAgentInjectors is true. Label selections are cumulative using the logical AND operation.
  namespaceLabelSelector: # @schema default:[{name: agents.contrastsecurity.com/agent-injectors, value: 'true'}]
    - name: # @schema type:[string];required
      value: # @schema type:[string];required
  injectors:
    # -- Injector AgentType, Required, Can be one of ['dotnet-core','java', 'nodejs', 'nodejs-legacy', 'php', 'python', 'flex']
    - language: # @schema type:[string];required;pattern:^(dotnet-core|dotnet|java|node|nodejs|node-esm|nodejs-esm|nodejs-legacy|php|personal-home-page|python|flex|dummy)$
      name: # @schema type:[string];required
      enabled: # @schema type:[boolean];default:true
      # -- Optional, specify labels and/or image names to inject. If omitted, all workloads will be injected.
      # Label selections are cumulative using the logical AND operation.
      selector:
        labels:
          - name: # @schema type:[string];required
            value: # @schema type:[string];required
        images: [] # @schema item:string
      # -- Optional image configuration.
      image:
        registry: # @schema type:[string, null]
        name: # @schema type:[string, null]
        pullPolicy: # @schema type:[string];enum:[IfNotPresent, Always, Never]
      # -- Optional image version, defaults to latest
      imageVersion: # @schema type:[string, null];default:latest
      # -- Optional name of an AgentConfiguration to use with this injector. Only supported if useClusterAgentInjectors is false.
      configurationName: # @schema type:[string, null]
      # -- Optional name of an AgentConnection to use with this injector. Only supported if useClusterAgentInjectors is false.
      connectionName: # @schema type:[string, null]
