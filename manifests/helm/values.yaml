# Namespace for the agent-operator, will be created if specified.
# When left blank the Helm namespace will be used and can be changed using `helm -n <namespace>`. Helm's `--create-namespace` option should be used when the Helm namespace does not exist and should be created.
namespace:
image:
  registry: contrast
  repository: agent-operator
  # Defaults to the version specified in Chart.AppVersion.
  tag:

imageCredentials:
  # Name of the registry credential secret that should be used to pull the above image.
  pullSecretName: image-credentials
  # If enabled, a registry credential secret will be created using the above name and below credentials.
  enabled: false
  registry: contrast
  username:
  password:
  email:

operator:
  # If enabled, deploy the operator. Disable if you want to deploy only configuration resources (injectors, cluster defaults).
  enabled: true
  # The default registry to use, defaults to docker.io/contrast.
  defaultRegistry: contrast
  # The settle duration in seconds.
  # The time to wait to sync with the cluster before making changes.
  settleDuration: 10
  # Max number of events to queue from the K8s event stream.
  eventQueueSize: 10000
  # The action to perform when the event queue is full,
  # and the operator is unable to process events fast enough.
  # Wait:
  #   Waits for space to be available in order to complete the write operation.
  #   This might be useful for larger clusters, allow the queue to create back pressure on the "get the world" calls during startup.
  # DropOldest:
  #   Removes and ignores the oldest item in the channel in order to make room for the item being written.
  eventQueueFullMode: DropOldest
  # The secret containing the TLS certificates used for the webhook.
  # Used for to cache TLS certificate generation across restarts,
  # and to share the same certificate across operator instances (when running in HA mode).
  # Should not normally need to change.
  webhookSecretName: contrast-web-hook-secret
  # The name of the webhook to patch after certificate generation occurs.
  # Should not normally need to change.
  webhookConfiguration: contrast-web-hook-configuration
  # Enable early chaining. Should only be enabled if you are using a dotnet-core AgentInjector and DynaKube is used in classicStack mode.
  enableEarlyChaining: false
  # Metadata for the operator deployment.
  labels: {}
  annotations: {}
  # Metadata for the operator pod(s).
  podLabels: {}
  podAnnotations: {}
  # Resource management for the operator container.
  replicas: 1
  resources:
    limits:
      cpu: 2000m
      memory: 512Mi
      #ephemeralStorage:
    requests:
      cpu: 500m
      memory: 256Mi
      #ephemeralStorage:
  # Resource management for the agent initContainers
  initContainer:
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
        ephemeralStorage: 1Gi # Needs to be greater than the size of the largest agent
      requests:
        cpu: 100m
        memory: 64Mi
        ephemeralStorage: 1Gi # Needs to be greater than the size of the largest agent

clusterDefaults:
  # If enabled, configure cluster-wide defaults.
  enabled: false
  # If true, parse and replace %variables% in the yaml.
  enableYamlVariableReplacement: false
  # If false, automatically set the Contrast application name on injected workloads (the workload name), rather than use the default (generated by the agent).
  suppressDefaultApplicationName: false
  # If false, automatically set the Contrast server name on injected workloads ('kubernetes-{namespace}'), rather than use the default (normally the pod name).
  suppressDefaultServerName: false
  # Optional. Any custom configuration to use. Must be in the format of the standard YAML file.
  yaml: |-
    enable: true
  # If true, mount the connection secret as a volume. This will override CONTRAST_CONFIG_PATH on the pod.
  mountConnectionAsVolume: false
  ### Token Authentication ##
  # Name of a secret to retrieve the cluster-wide connection token from.
  # The secret should contain a key named 'token' (the agent token from the Contrast UI).
  # Leave blank if you want the chart to create a secret using the subsequent tokenValue.
  existingTokenSecret:
  # Required if existingTokenSecret is not set. The Agent Token from the Contrast UI.
  tokenValue:
  ### Legacy Authentication ###
  # Name of a secret to retrieve the cluster-wide connection details from.
  # The secret should contain keys named 'apiKey', 'serviceKey' and 'userName'.
  # Leave blank if you want the chart to create a secret using the subsequent apiKeyValue, serviceKeyValue and userNameValue values.
  existingSecret:
  # Required. The Contrast UI instance to use. Defaults at the general SAAS instance.
  url: https://app-agents.contrastsecurity.com/Contrast
  # Required if existingSecret is not set. The API Key from the Contrast UI.
  apiKeyValue:
  # Required if existingSecret is not set. The Service Key from the Contrast UI.
  serviceKeyValue:
  # Required if existingSecret  is not set. The User Name from the Contrast UI.
  userNameValue:

agentInjectors:
  enabled: true
  useClusterAgentInjectors: true # Create ClusterAgentInjector resources instead of AgentInjectors
  # Optional, target namespaces for AgentInjectors. Glob syntax is supported if useClusterAgentInjectors is true.
  namespaces:
    - default
  # Optional, label selector to select namespaces to create AgentInjectors in. Only supported if useClusterAgentInjectors is true. Label selections are cumulative using the logical AND operation.
  namespaceLabelSelector:
    - name: agents.contrastsecurity.com/agent-injectors
      value: 'true'
  injectors:
    - language: java
      name: contrast-java-injector
      # Optional, defaults to true (enabled)
      enabled: true
      # Optional, specify labels and/or image names to inject. If omitted, all workloads will be injected.
      # Label selections are cumulative using the logical AND operation.
      selector:
        labels:
          - name: contrast-agent
            value: java
        #images:
        #  - imagename
      # Optional image configuration.
      # image:
      #   registry: docker.io/contrast
      #   name: agent-java
      #   pullPolicy: Always
      # Optional image version, defaults to latest
      #imageVersion: 5
      # Optional name of an AgentConfiguration to use with this injector. Only supported if useClusterAgentInjectors is false.
      #configurationName: custom-config-name
      # Optional name of an AgentConnection to use with this injector. Only supported if useClusterAgentInjectors is false.
      #connectionName: custom-connection-name

    - language: dotnet-core
      name: contrast-dotnet-core-injector
      selector:
        labels:
          - name: contrast-agent
            value: dotnet-core
    - language: nodejs
      name: contrast-nodejs-injector
      selector:
        labels:
          - name: contrast-agent
            value: nodejs
    - language: php
      name: contrast-php-injector
      selector:
        labels:
          - name: contrast-agent
            value: php
    - language: python
      name: contrast-python-injector
      selector:
        labels:
          - name: contrast-agent
            value: python
    - language: flex
      name: contrast-flex-injector
      selector:
        labels:
          - name: contrast-agent
            value: flex
