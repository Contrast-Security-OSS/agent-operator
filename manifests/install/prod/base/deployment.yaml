apiVersion: apps/v1
kind: Deployment
metadata:
  name: contrast-agent-operator
  namespace: contrast-agent-operator
  labels:
    app: contrast-agent-operator
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: contrast-agent-operator
  template:
    metadata:
      labels:
        app: contrast-agent-operator
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - contrast-agent-operator
                topologyKey: kubernetes.io/hostname
      serviceAccountName: contrast-agent-operator-service-account
      containers:
        - name: contrast-agent-operator
          image: contrastsecurity.com/agent-operator/operator:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5001
              name: https
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONTRAST_WEBHOOK_SERVICENAME
              value: contrast-agent-operator
            - name: CONTRAST_WEBHOOK_HOSTS
              value: $(CONTRAST_WEBHOOK_SERVICENAME),$(CONTRAST_WEBHOOK_SERVICENAME).$(POD_NAMESPACE).svc,$(CONTRAST_WEBHOOK_SERVICENAME).$(POD_NAMESPACE).svc.cluster.local
            - name: CONTRAST_DEFAULT_REPOSITORY
              value: "registry.contrastsecurity.com"
          livenessProbe:
            httpGet:
              path: /health
              port: https
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /health
              port: https
              scheme: HTTPS
          resources: # Very liberal here, likely not needed.
            limits:
              cpu: '2'
              memory: 512M
            requests:
              cpu: '1'
              memory: 256M
