// Contrast Security, Inc licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information.

using Contrast.K8s.AgentOperator.Core.Kube;
using k8s.Models;
using KubeOps.Operator.Entities;
using KubeOps.Operator.Rbac;

namespace Contrast.K8s.AgentOperator.Entities
{
    [KubernetesEntity(Group = "agents.contrastsecurity.com", ApiVersion = "v1beta1", Kind = "AgentConfiguration", PluralName = "agentconfigurations")]
    [EntityRbac(typeof(V1Beta1AgentConfiguration), Verbs = VerbConstants.FullControl)]
    public class V1Beta1AgentConfiguration : CustomKubernetesEntity<V1Beta1AgentConfiguration.AgentConfigurationSpec>
    {
        public V1Beta1AgentConfiguration()
        {
            Kind = "AgentConfiguration";
            ApiVersion = "agents.contrastsecurity.com/v1beta1";
        }

        public class AgentConfigurationSpec
        {
            /// <summary>
            /// The contrast_security.yaml file. Multiple lines are supported.
            /// </summary>
            public string? Yaml { get; set; }

            /// <summary>
            /// If false, automatically set the Contrast server name on injected workloads ('kubernetes-{namespace}'),
            /// rather than use the default (normally the pod name).
            /// Defaults to false.
            /// </summary>
            public bool? SuppressDefaultServerName { get; set; }

            /// <summary>
            /// If false, automatically set the Contrast application name on injected workloads (the workload name),
            /// rather than use the default (generated by the agent).
            /// Defaults to false.
            /// </summary>
            public bool? SuppressDefaultApplicationName { get; set; }

            /// <summary>
            /// Optional spec to apply to the Contrast InitContainer.
            /// If not specified, reasonable defaults are used.
            /// </summary>
            public InitContainerOverridesSpec? InitContainer { get; set; }
        }

        public class InitContainerOverridesSpec
        {
            /// <summary>
            /// SecurityContext defines the security options the container should be run with.
            /// If set, the fields of SecurityContext override the equivalent fields of
            /// PodSecurityContext. More info:
            /// https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
            /// </summary>
            public V1SecurityContext? SecurityContext { get; set; }
        }
    }
}
